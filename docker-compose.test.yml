networks:
  devnetwork:

services:
  db-test:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres-test-data:/var/lib/postgresql/data # Persist data even after container is removed
    networks:
      - devnetwork

  frontend-tests:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    image: interview-prep-frontend-tests:latest
    working_dir: /app/frontend
    command: npm run test -- --watch=false --browsers=ChromeHeadlessNoSandbox
    networks:
      - devnetwork

  backend-tests:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=test
      - DATABASE_URL=${DATABASE_URL}
    image: interview-prep-backend-tests:latest
    working_dir: /app/backend
    depends_on:
      - db-test
    command: sh -c "npx jest --clearCache && npx jest --watch=false --config ./jest.config.ts --testPathPattern=users.integration.test.ts && npx jest --watch=false --config  ./jest.config.ts --testPathPattern=products.integration.test.ts && npx jest --watch=false --config  ./jest.config.ts --testPathPattern=unit"
    # command: tail -f /dev/null
    networks:
      - devnetwork

volumes:
  postgres-test-data:
